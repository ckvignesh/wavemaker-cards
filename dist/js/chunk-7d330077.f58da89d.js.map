{"version":3,"sources":["webpack:///../../../src/components/VTextField/index.ts","webpack:///./src/components/filesystem/LocalOpen-clean.vue?ac3a","webpack:///src/components/filesystem/LocalOpen-clean.vue","webpack:///./src/components/filesystem/LocalOpen-clean.vue?04b5","webpack:///../../../src/components/VFileInput/VFileInput.ts","webpack:///./src/components/filesystem/LocalOpen-clean.vue"],"names":["_vm","this","_h","$createElement","_c","_self","attrs","on","openfile","staticRenderFns","methods","openselector","document","getElementById","click","window","wmlog","files","length","console","log","fr","onload","readAsText","item","VTextField","name","model","prop","event","props","chips","clearable","type","default","counterSizeString","counterString","hideInput","placeholder","prependIcon","readonly","showSize","Boolean","validator","v","includes","smallChips","truncateLength","Number","value","val","computed","classes","computedCounterValue","fileCount","isMultiple","lazyValue","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","isDirty","isLabelActive","$attrs","hasOwnProperty","text","isFocused","map","file","truncatedText","hasChips","watch","handler","immediate","$refs","input","clearableCallback","genChips","small","genControl","render","display","genInput","genPrependSlot","icon","genIcon","genSlot","genSelectionText","genSelections","children","$scopedSlots","index","staticClass","class","selection","genTextFieldSlot","node","onInput","e","onKeyDown","truncateText","str","charsKeepOneSide","Math","component","VFileInput"],"mappings":"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","file":"js/chunk-7d330077.f58da89d.js","sourcesContent":["import VTextField from './VTextField'\n\nexport { VTextField }\nexport default VTextField\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-file-input',{attrs:{\"id\":\"selectFiles\",\"accept\":\".wmproj,.json\",\"prepend-icon\":\"cloud_upload\"},on:{\"change\":_vm.openfile}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n<v-file-input\r\n      id=\"selectFiles\"\r\n    accept=\".wmproj,.json\"\r\n        @change=\"openfile\"\r\n        prepend-icon=\"cloud_upload\"\r\n></v-file-input>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  methods: {\r\n    openselector(){\r\n      document.getElementById('selectFiles').click()\r\n    },\r\n    openfile() {\r\n      window.wmlog(\"Open local file (WEB)\", \"warn\");\r\n\r\n      const files = document.getElementById(\"selectFiles\").files;\r\n      if (files.length <= 0) {\r\n        return false;\r\n      }\r\n\r\n      const fr = new FileReader();\r\n      console.log(files);\r\n      fr.onload = (e) => {\r\n        this.$root.importFile(e.target.result);\r\n        this.$root.fileinfo.location = \"WebLocal\";\r\n        this.$root.fileinfo.type = \"WebLocal\";\r\n      };\r\n\r\n      fr.readAsText(files.item(0));\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LocalOpen-clean.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LocalOpen-clean.vue?vue&type=script&lang=js&\"","// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.isMultiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    isMultiple (): boolean {\n      return this.$attrs.hasOwnProperty('multiple')\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.isMultiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.isMultiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.isMultiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./LocalOpen-clean.vue?vue&type=template&id=2ff51796&\"\nimport script from \"./LocalOpen-clean.vue?vue&type=script&lang=js&\"\nexport * from \"./LocalOpen-clean.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\ninstallComponents(component, {VFileInput})\n"],"sourceRoot":""}